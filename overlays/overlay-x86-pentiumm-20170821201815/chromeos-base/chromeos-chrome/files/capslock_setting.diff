diff --git a/chrome/browser/resources/options/chromeos/keyboard_overlay.html b/chrome/browser/resources/options/chromeos/keyboard_overlay.html
index b74c00d..cab7b25 100644
--- a/chrome/browser/resources/options/chromeos/keyboard_overlay.html
+++ b/chrome/browser/resources/options/chromeos/keyboard_overlay.html
@@ -43,7 +43,7 @@
        </tr>
        <!-- The caps lock section is hidden by default. This is only visible
             when --has-chromeos-keyboard flag is not passed. -->
-       <tr id="caps-lock-remapping-section" hidden>
+       <tr id="caps-lock-remapping-section" >
          <td class="option-name" id="remap-caps-lock-key-to-label"
                i18n-content="remapCapsLockKeyToContent">
          </td>
diff --git a/chrome/browser/ui/webui/options/chromeos/keyboard_handler.cc b/chrome/browser/ui/webui/options/chromeos/keyboard_handler.cc
index 0429a44..425a380 100644
--- a/chrome/browser/ui/webui/options/chromeos/keyboard_handler.cc
+++ b/chrome/browser/ui/webui/options/chromeos/keyboard_handler.cc
@@ -49,15 +49,15 @@ const char* kDataValuesNames[] = {
   "remapDiamondKeyToValue",
 };
 
-bool HasExternalKeyboard() {
-  for (const ui::InputDevice& keyboard :
-       ui::InputDeviceManager::GetInstance()->GetKeyboardDevices()) {
-    if (keyboard.type == ui::InputDeviceType::INPUT_DEVICE_EXTERNAL)
-      return true;
-  }
-
-  return false;
-}
+//bool HasExternalKeyboard() {
+//  for (const ui::InputDevice& keyboard :
+//       ui::InputDeviceManager::GetInstance()->GetKeyboardDevices()) {
+//    if (keyboard.type == ui::InputDeviceType::INPUT_DEVICE_EXTERNAL)
+//      return true;
+//  }
+//
+// return false;
+//}
 }  // namespace
 
 namespace chromeos {
@@ -179,7 +179,9 @@ void KeyboardHandler::HandleShowKeyboardShortcuts(const base::ListValue* args) {
 }
 
 void KeyboardHandler::UpdateCapsLockOptions() const {
-  const base::Value show_caps_lock_options(HasExternalKeyboard());
+  //const base::Value show_caps_lock_options(HasExternalKeyboard());
+  // force show CapsLock Menu.
+  const base::Value show_caps_lock_options(true);
   web_ui()->CallJavascriptFunctionUnsafe(
       "options.KeyboardOverlay.showCapsLockOptions", show_caps_lock_options);
 }
