diff --git a/content/browser/compositor/gpu_process_transport_factory.cc b/content/browser/compositor/gpu_process_transport_factory.cc
index 9af7049..b40088c 100644
--- a/content/browser/compositor/gpu_process_transport_factory.cc
+++ b/content/browser/compositor/gpu_process_transport_factory.cc
@@ -263,10 +263,11 @@ CreateOverlayCandidateValidator(gfx::AcceleratedWidget widget) {
 }
 
 static bool ShouldCreateGpuCompositorFrameSink(ui::Compositor* compositor) {
-#if defined(OS_CHROMEOS)
-  // Software fallback does not happen on Chrome OS.
-  return true;
-#endif
+// enable Software fallback on Chrome OS for EEE PC 900.
+//#if defined(OS_CHROMEOS)
+//  // Software fallback does not happen on Chrome OS.
+//  return true;
+//#endif
 #if defined(OS_WIN)
   if (::GetProp(compositor->widget(), kForceSoftwareCompositor) &&
       ::RemoveProp(compositor->widget(), kForceSoftwareCompositor))
@@ -330,12 +331,12 @@ void GpuProcessTransportFactory::EstablishedGpuChannel(
   DCHECK(data);
 
   if (num_attempts > kNumRetriesBeforeSoftwareFallback) {
-    bool fatal = false;
-#if defined(OS_CHROMEOS)
-    fatal = true;
-#endif
-    LOG_IF(FATAL, fatal) << "Unable to create a UI graphics context, and "
-                         << "cannot use software compositing on ChromeOS.";
+//    bool fatal = IsUsingMus();
+//#if defined(OS_CHROMEOS)
+//    fatal = true;
+//#endif
+//    LOG_IF(FATAL, fatal) << "Unable to create a UI graphics context, and "
+//                         << "cannot use software compositing on ChromeOS.";
     create_gpu_output_surface = false;
   }
 
diff --git a/content/browser/gpu/gpu_process_host.cc b/content/browser/gpu/gpu_process_host.cc
index a3860fe..f733a78 100644
--- a/content/browser/gpu/gpu_process_host.cc
+++ b/content/browser/gpu/gpu_process_host.cc
@@ -1159,12 +1159,13 @@ void GpuProcessHost::RecordProcessCrash() {
 
       if ((gpu_recent_crash_count_ >= kGpuMaxCrashCount || !initialized_) &&
           !disable_crash_limit) {
-#if !defined(OS_CHROMEOS)
+	// enable falldown to software rendering with CHROMEOS
+//#if !defined(OS_CHROMEOS)
         // The GPU process is too unstable to use. Disable it for current
         // session.
         hardware_gpu_enabled_ = false;
         GpuDataManagerImpl::GetInstance()->DisableHardwareAcceleration();
-#endif
+//#endif
       }
     }
   }
