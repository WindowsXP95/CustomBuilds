diff --git a/bin/cros_make_image_bootable b/bin/cros_make_image_bootable
index 310c80a..d93fd63 100755
--- a/bin/cros_make_image_bootable
+++ b/bin/cros_make_image_bootable
@@ -230,10 +230,11 @@ make_image_bootable() {
 
   # Mount the image in safe mode (rootfs is read-only) unless we need to modify
   # the rootfs.
-  local mode_flags=( --safe )
-  if [[ ${FLAGS_force_developer_mode} -eq ${FLAGS_TRUE} ]]; then
-    mode_flags=()
-  fi
+  #local mode_flags=( --safe )
+  #if [[ ${FLAGS_force_developer_mode} -eq ${FLAGS_TRUE} ]]; then
+  #  mode_flags=()
+  #fi
+  local mode_flags=()
 
   trap "unmount_image ; die 'cros_make_image_bootable failed.'" EXIT
   mount_image "${image}" "${FLAGS_rootfs_mountpoint}" \
@@ -243,7 +244,9 @@ make_image_bootable() {
   # This is required because postinst will copy new legacy boot configurations
   # from rootfs partition instead of modifying existing entries in partition 12
   # (EFI partition).
-  if [ ${FLAGS_force_developer_mode} -eq ${FLAGS_TRUE} ]; then
+  
+  # customize: set cros_debug as defauilt for touble shooting
+  #if [ ${FLAGS_force_developer_mode} -eq ${FLAGS_TRUE} ]; then
     append_boot_flag "${FLAGS_rootfs_mountpoint}/boot/syslinux/root.A.cfg" \
       "cros_debug" "cros_legacy"
     append_boot_flag "${FLAGS_rootfs_mountpoint}/boot/syslinux/root.B.cfg" \
@@ -253,6 +256,7 @@ make_image_bootable() {
     append_boot_flag "${FLAGS_rootfs_mountpoint}/boot/efi/boot/grub.cfg" \
       "cros_debug" "cros_efi"
 
+  if [ ${FLAGS_force_developer_mode} -eq ${FLAGS_TRUE} ]; then
     # No more modifications required after this point.
     remount_image --safe
   fi
